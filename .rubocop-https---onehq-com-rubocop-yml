require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  TargetRubyVersion: 2.6
  DisabledByDefault: true
  NewCops: disable
  Exclude:
    - "**/node_modules/**/*"
    - "**/spec/**/*"
    - "**/templates/**/*"
    - "**/vendor/**/*"

Bundler:
  Enabled: true

Gemspec:
  Enabled: true

Lint:
  Enabled: true

Naming:
  Enabled: true

Rails:
  Enabled: true

Performance:
  Enabled: true

Security:
  Enabled: true

Layout/CaseIndentation:
  Enabled: true

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/DotPosition:
  Enabled: true
  EnforcedStyle: trailing

Layout/ElseAlignment:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable
  AutoCorrect: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

Layout/FirstArgumentIndentation:
  Enabled: true

Layout/IndentationConsistency:
  Enabled: true

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAfterSemicolon:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeComment:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyleForEmptyBraces: space

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Detect hard tabs, no hard tabs.
Layout/IndentationStyle:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingEmptyLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

Naming/PredicateName:
  Enabled: false

Naming/MethodParameterName:
  Enabled: false

Performance/RedundantBlockCall:
  Enabled: false

Rails/ApplicationController:
  Enabled: false

Rails/ApplicationMailer:
  Enabled: false
  
Rails/ApplicationRecord:
  Enabled: false

Rails/Date:
  Enabled: false

Rails/LexicallyScopedActionFilter:
  Enabled: false

Rails/Output:
  Enabled: false
  
Rails/RakeEnvironment:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: true
  Whitelist: [update_all]

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

Style/BlockDelimiters:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

Style/TrivialAccessors:
  Enabled: true
